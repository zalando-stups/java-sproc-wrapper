<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.zalando</groupId>
    <artifactId>zalando-sprocwrapper</artifactId>
    <version>4.0.0-SNAPSHOT</version>

    <name>Stored Procedure Wrapper</name>
    <description>Library to make PostgreSQL stored procedures available through simple Java "*SProcService" interfaces
        including automatic object serialization and deserialization (using typemapper and
        convention-over-configuration). Supports sharding, advisory locking, statement timeouts and PostgreSQL types
        such as enums and hstore.
    </description>
    <url>https://github.com/zalando-incubator/java-sproc-wrapper</url>

    <organization>
        <name>Zalando SE</name>
    </organization>

    <inceptionYear>2012</inceptionYear>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Jan Mu√üler</name>
            <email>jan.mussler@zalando.de</email>
            <organization>Zalando SE</organization>
            <organizationUrl>http://tech.zalando.com/</organizationUrl>
        </developer>
        <developer>
            <name>Henning Jacobs</name>
            <email>henning.jacobs@zalando.de</email>
            <organization>Zalando SE</organization>
            <organizationUrl>http://tech.zalando.com/</organizationUrl>
        </developer>
        <developer>
            <name>Vadim Shaigorodskiy</name>
            <email>vadim.shaigorodskiy@zalando.de</email>
            <organization>Zalando SE</organization>
            <organizationUrl>http://tech.zalando.com/</organizationUrl>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/zalando-stups/java-sproc-wrapper.git</url>
        <connection>scm:git:git://github.com/zalando-stups/java-sproc-wrapper.git</connection>
        <developerConnection>scm:git:git@github.com:zalando-stups/java-sproc-wrapper.git</developerConnection>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <spring.version>6.2.0</spring.version>
        <postgresql.version>42.7.4</postgresql.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.26</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.17.0</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>9.0.0.Beta3</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.el</artifactId>
            <version>5.0.0-M1</version>
        </dependency>

        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <!-- 0.9.12 has a known bug https://github.com/ronmamo/reflections/issues/279 -->
            <version>0.9.11</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>33.3.1-jre</version>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.10.2</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
            <version>4.13.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.cthul</groupId>
            <artifactId>cthul-matchers</artifactId>
            <version>1.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>3.3.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.26</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.28.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M2</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.5.0</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.basepom.maven</groupId>
                <artifactId>duplicate-finder-maven-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <failBuildInCaseOfDifferentContentConflict>true</failBuildInCaseOfDifferentContentConflict>
                            <failBuildInCaseOfEqualContentConflict>false</failBuildInCaseOfEqualContentConflict>
                            <ignoredClassPatterns>
                                <ignoredClassPattern>.*\.module-info</ignoredClassPattern>
                            </ignoredClassPatterns>
                            <ignoredResourcePatterns>
                                <ignoredResourcePattern>.*</ignoredResourcePattern>
                            </ignoredResourcePatterns>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <compilerArgs>
                        <compilerArg>-Xlint:unchecked,deprecation</compilerArg>
                        <compilerArg>-Werror</compilerArg>
                        <compilerArg>-parameters</compilerArg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M3</version>
                <configuration>
                    <parallel>classesAndMethods</parallel>
                    <threadCount>1</threadCount>
                    <perCoreThreadCount>true</perCoreThreadCount>
                    <useFile>false</useFile>
                    <systemPropertyVariables>
                        <user.timezone>UTC</user.timezone>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>

                    <!-- TODO reach 100% code coverage
                    <execution>
                        <id>check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>CLASS</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>1.0</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>1.0</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                    -->
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>4.3.0</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>integration-test</id>
            <properties>
                <test.db.username>postgres</test.db.username>
                <test.db.password>postgres</test.db.password>
                <test.db.name1>local_test_db1</test.db.name1>
                <test.db.name2>local_test_db2</test.db.name2>
                <test.db.host>localhost</test.db.host>
                <test.db.port>5432</test.db.port>
                <unit.test.skip>false</unit.test.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>3.0.0-M3</version>
                        <configuration>
                            <systemPropertyVariables>
                                <frontend.sproc.datasource.username>${test.db.username}</frontend.sproc.datasource.username>
                                <frontend.sproc.datasource.password>${test.db.password}</frontend.sproc.datasource.password>
                                <frontend.sproc.datasource.url1>jdbc:postgresql://${test.db.host}:${test.db.port}/${test.db.name1}</frontend.sproc.datasource.url1>
                                <frontend.sproc.datasource.url2>jdbc:postgresql://${test.db.host}:${test.db.port}/${test.db.name2}</frontend.sproc.datasource.url2>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <username>${test.db.username}</username>
                            <password>${test.db.password}</password>
                        </configuration>
                        <executions>
                            <execution>
                                <id>create-db</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <driver>org.postgresql.Driver</driver>
                                    <url>jdbc:postgresql://${test.db.host}:${test.db.port}/postgres</url>
                                    <autocommit>true</autocommit>
                                    <sqlCommand>
                                        CREATE DATABASE ${test.db.name1} TEMPLATE template1;
                                        CREATE DATABASE ${test.db.name2} TEMPLATE template1;
                                        CREATE ROLE zalando_api_owner;
                                        CREATE ROLE zalando_api_executor;
                                        CREATE ROLE zalando_api_usage;
                                    </sqlCommand>
                                    <onError>continue</onError>
                                </configuration>
                            </execution>

                            <!-- execution against database 1 -->
                            <execution>
                                <id>drop-schemas-database1</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <driver>org.postgresql.Driver</driver>
                                    <url>jdbc:postgresql://${test.db.host}:${test.db.port}/${test.db.name1}</url>
                                    <sqlCommand>
                                        DROP EXTENSION IF EXISTS hstore CASCADE;
                                        CREATE EXTENSION hstore;
                                        DROP SCHEMA IF EXISTS ztest_schema1 CASCADE;
                                        DROP SCHEMA IF EXISTS ztest_schema2 CASCADE;
                                        DROP SCHEMA IF EXISTS ztest_schema3 CASCADE;
                                    </sqlCommand>
                                    <onError>continue</onError>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-data-database1</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <driver>org.postgresql.Driver</driver>
                                    <url>jdbc:postgresql://${test.db.host}:${test.db.port}/${test.db.name1}</url>
                                    <delimiterType>row</delimiterType>
                                    <keepFormat>true</keepFormat>
                                    <orderFile>ascending</orderFile>
                                    <fileset>
                                        <basedir>${basedir}</basedir>
                                        <includes>
                                            <include>database/test/21_shard1/**/*.sql</include>
                                        </includes>
                                    </fileset>
                                </configuration>
                            </execution>

                            <!-- execution against database 2 -->
                            <execution>
                                <id>drop-schemas-database2</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <driver>org.postgresql.Driver</driver>
                                    <url>jdbc:postgresql://${test.db.host}:${test.db.port}/${test.db.name2}</url>
                                    <sqlCommand>
                                        DROP EXTENSION IF EXISTS hstore CASCADE;
                                        CREATE EXTENSION hstore;
                                        DROP SCHEMA IF EXISTS ztest_schema1 CASCADE;
                                    </sqlCommand>
                                    <onError>continue</onError>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-data-database2</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <driver>org.postgresql.Driver</driver>
                                    <url>jdbc:postgresql://${test.db.host}:${test.db.port}/${test.db.name2}</url>
                                    <delimiterType>row</delimiterType>
                                    <keepFormat>true</keepFormat>
                                    <orderFile>ascending</orderFile>
                                    <fileset>
                                        <basedir>${basedir}</basedir>
                                        <includes>
                                            <include>database/test/22_shard2/**/*.sql</include>
                                        </includes>
                                    </fileset>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.8</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
